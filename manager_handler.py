from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup, ReplyKeyboardMarkup
from telegram.ext import CallbackContext, CallbackQueryHandler, MessageHandler, filters, CommandHandler

from config import ADMIN_ID  # ID –º–µ–Ω–µ–¥–∂–µ—Ä–∞ (–∞–¥–º–∏–Ω–∞)

# üîπ –ê–∫—Ç–∏–≤–Ω—ã–µ —á–∞—Ç—ã (—Å–≤—è–∑—ã–≤–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏ –º–µ–Ω–µ–¥–∂–µ—Ä–∞)
active_chats = {}

# üîπ –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
MAIN_MENU = ReplyKeyboardMarkup(
    [["üé≤ –û–± –ò–≥—Ä–∞—Ö", "üìù –ó–∞–ø–∏—Å–∞—Ç—å—Å—è"], ["üìû –°–≤—è–∑–∞—Ç—å—Å—è"]],
    resize_keyboard=True
)

# üîπ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–∞–∂–∏–º–∞–µ—Ç "üìû –°–≤—è–∑–∞—Ç—å—Å—è"
async def contact_info(update: Update, context: CallbackContext):
    keyboard = [[InlineKeyboardButton("üì¢ –ü–æ–∑–≤–∞—Ç—å –º–µ–Ω–µ–¥–∂–µ—Ä–∞", callback_data="call_manager")]]
    reply_markup = InlineKeyboardMarkup(keyboard)

    await update.message.reply_text(
        "üìû –í—ã –º–æ–∂–µ—Ç–µ –ø–æ–∑–≤–æ–Ω–∏—Ç—å –Ω–∞–º –ø–æ –Ω–æ–º–µ—Ä—É: +7 916 906-96-65\n"
        "–ò–ª–∏ –ø–æ–∑–≤–∞—Ç—å –º–µ–Ω–µ–¥–∂–µ—Ä–∞ –≤ —á–∞—Ç.",
        reply_markup=reply_markup
    )

# üîπ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤—ã–∑—ã–≤–∞–µ—Ç –º–µ–Ω–µ–¥–∂–µ—Ä–∞
async def call_manager(update: Update, context: CallbackContext):
    query = update.callback_query
    user_id = query.from_user.id
    username = query.from_user.username or query.from_user.first_name

    # –ï—Å–ª–∏ —É–∂–µ –µ—Å—Ç—å –∞–∫—Ç–∏–≤–Ω—ã–π —á–∞—Ç, —É–≤–µ–¥–æ–º–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    if user_id in active_chats:
        await query.answer("–í—ã —É–∂–µ –≤ —á–∞—Ç–µ —Å –º–µ–Ω–µ–¥–∂–µ—Ä–æ–º.")
        return
    
    # –î–æ–±–∞–≤–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –∞–∫—Ç–∏–≤–Ω—ã–µ —á–∞—Ç—ã
    active_chats[user_id] = ADMIN_ID  # –°–≤—è–∑—ã–≤–∞–µ–º —Å –º–µ–Ω–µ–¥–∂–µ—Ä–æ–º

    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –º–µ–Ω–µ–¥–∂–µ—Ä—É —Å –∫–Ω–æ–ø–∫–æ–π "–ù–∞—á–∞—Ç—å —á–∞—Ç"
    keyboard = [[InlineKeyboardButton("üìù –ù–∞—á–∞—Ç—å —á–∞—Ç", callback_data=f"start_chat_{user_id}")]]
    reply_markup = InlineKeyboardMarkup(keyboard)

    await context.bot.send_message(
        chat_id=ADMIN_ID,
        text=f"üì¢ –ó–∞–ø—Ä–æ—Å –Ω–∞ —á–∞—Ç –æ—Ç @{username} (ID: {user_id}).",
        reply_markup=reply_markup
    )

    # –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
    await query.answer("–ú–µ–Ω–µ–¥–∂–µ—Ä –±—É–¥–µ—Ç —É–≤–µ–¥–æ–º–ª—ë–Ω!")
    await query.edit_message_text("‚úÖ –ú–µ–Ω–µ–¥–∂–µ—Ä —É–∂–µ –≤ –∫—É—Ä—Å–µ, —Å–∫–æ—Ä–æ —Å–≤—è–∂–µ—Ç—Å—è —Å –≤–∞–º–∏!")

# üîπ –ú–µ–Ω–µ–¥–∂–µ—Ä –ø—Ä–∏–Ω–∏–º–∞–µ—Ç —á–∞—Ç
async def start_chat(update: Update, context: CallbackContext):
    query = update.callback_query
    user_id = int(query.data.split("_")[2])  # –ë–µ—Ä—ë–º ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è

    if user_id not in active_chats:
        await query.answer("–≠—Ç–æ—Ç —á–∞—Ç —É–∂–µ –∑–∞–∫—Ä—ã—Ç.")
        return

    active_chats[user_id] = ADMIN_ID  # –°–≤—è–∑—ã–≤–∞–µ–º —Å –º–µ–Ω–µ–¥–∂–µ—Ä–æ–º

    # –ö–Ω–æ–ø–∫–∞ "‚ùå –û–∫–æ–Ω—á–∏—Ç—å —á–∞—Ç" –¥–ª—è –º–µ–Ω–µ–¥–∂–µ—Ä–∞
    end_chat_button = InlineKeyboardMarkup([[InlineKeyboardButton("‚ùå –û–∫–æ–Ω—á–∏—Ç—å —á–∞—Ç", callback_data="end_chat")]])

    await context.bot.send_message(chat_id=user_id, text="üí¨ –ú–µ–Ω–µ–¥–∂–µ—Ä –ø–æ–¥–∫–ª—é—á–∏–ª—Å—è. –í—ã –º–æ–∂–µ—Ç–µ –Ω–∞—á–∞—Ç—å –æ–±—â–µ–Ω–∏–µ.")
    await context.bot.send_message(chat_id=ADMIN_ID, text=f"üí¨ –í—ã –Ω–∞—á–∞–ª–∏ —á–∞—Ç —Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º {user_id}.", reply_markup=end_chat_button)

    await query.answer()

# üîπ –ü–µ—Ä–µ—Å—ã–ª–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏–π –º–µ–∂–¥—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º –∏ –º–µ–Ω–µ–¥–∂–µ—Ä–æ–º
async def chat_forward(update: Update, context: CallbackContext):
    user_id = update.message.from_user.id

    # –ï—Å–ª–∏ –ø–∏—à–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å ‚Äî –ø–µ—Ä–µ—Å—ã–ª–∞–µ–º –º–µ–Ω–µ–¥–∂–µ—Ä—É
    if user_id in active_chats and active_chats[user_id] == ADMIN_ID:
        await context.bot.send_message(chat_id=ADMIN_ID, text=f"üë§ @{update.message.from_user.username}: {update.message.text}")
    
    # –ï—Å–ª–∏ –ø–∏—à–µ—Ç –º–µ–Ω–µ–¥–∂–µ—Ä ‚Äî –ø–µ—Ä–µ—Å—ã–ª–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
    elif user_id == ADMIN_ID:
        for user in active_chats:
            if active_chats[user] == ADMIN_ID:
                await context.bot.send_message(chat_id=user, text=f"üì© –ú–µ–Ω–µ–¥–∂–µ—Ä: {update.message.text}")

# üîπ –ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ —á–∞—Ç–∞ (–∫–Ω–æ–ø–∫–∞ –∏ –∫–æ–º–∞–Ω–¥–∞)
async def end_chat(update: Update, context: CallbackContext):
    query = update.callback_query if update.callback_query else None
    user_id = query.from_user.id if query else update.message.from_user.id

    # –ï—Å–ª–∏ –º–µ–Ω–µ–¥–∂–µ—Ä –∑–∞–≤–µ—Ä—à–∞–µ—Ç —á–∞—Ç
    if user_id == ADMIN_ID:
        for user in list(active_chats.keys()):
            if active_chats[user] == ADMIN_ID:
                await context.bot.send_message(chat_id=user, text="üö´ –ß–∞—Ç –∑–∞–≤–µ—Ä—à—ë–Ω –º–µ–Ω–µ–¥–∂–µ—Ä–æ–º.", reply_markup=MAIN_MENU)
                del active_chats[user]
    
    # –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∑–∞–≤–µ—Ä—à–∞–µ—Ç —á–∞—Ç
    elif user_id in active_chats:
        await context.bot.send_message(chat_id=ADMIN_ID, text=f"‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user_id} –∑–∞–≤–µ—Ä—à–∏–ª —á–∞—Ç.")
        del active_chats[user_id]

    if query:
        await query.answer("–ß–∞—Ç –∑–∞–≤–µ—Ä—à—ë–Ω.")
        await query.message.delete()  # –£–¥–∞–ª—è–µ–º –∫–Ω–æ–ø–∫—É "‚ùå –û–∫–æ–Ω—á–∏—Ç—å —á–∞—Ç" —É –º–µ–Ω–µ–¥–∂–µ—Ä–∞
    else:
        await update.message.reply_text("‚úÖ –ß–∞—Ç –∑–∞–≤–µ—Ä—à—ë–Ω.", reply_markup=MAIN_MENU)

# üîπ –ü–æ–¥–∫–ª—é—á–∞–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏
def setup_manager_handlers(app):
    app.add_handler(MessageHandler(filters.TEXT & filters.Regex("üìû –°–≤—è–∑–∞—Ç—å—Å—è"), contact_info))  # –ö–Ω–æ–ø–∫–∞ "–°–≤—è–∑–∞—Ç—å—Å—è"
    app.add_handler(CallbackQueryHandler(call_manager, pattern="call_manager"))  # –ö–Ω–æ–ø–∫–∞ "–ü–æ–∑–≤–∞—Ç—å –º–µ–Ω–µ–¥–∂–µ—Ä–∞"
    app.add_handler(CallbackQueryHandler(start_chat, pattern="start_chat_"))  # –ú–µ–Ω–µ–¥–∂–µ—Ä –ø—Ä–∏–Ω–∏–º–∞–µ—Ç —á–∞—Ç
    app.add_handler(CallbackQueryHandler(end_chat, pattern="end_chat"))  # –ú–µ–Ω–µ–¥–∂–µ—Ä –∑–∞–≤–µ—Ä—à–∞–µ—Ç —á–∞—Ç –∫–Ω–æ–ø–∫–æ–π
    app.add_handler(MessageHandler(filters.TEXT, chat_forward))  # –ü–µ—Ä–µ—Å—ã–ª–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏–π
    app.add_handler(CommandHandler("endchat", end_chat))  # –ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ —á–∞—Ç–∞ —á–µ—Ä–µ–∑ –∫–æ–º–∞–Ω–¥—É
